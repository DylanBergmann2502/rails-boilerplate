# deploy/local/web.yml
volumes:
  rails_knightmare_local_postgres_data: {}
  rails_knightmare_local_postgres_data_backups: {}
  rails_knightmare_local_redis_data: {}

services:
  rails:
    build:
      context: ../..
      dockerfile: ./deploy/local/compose/rails/Dockerfile
    image: rails_knightmare_local_rails
    container_name: rails_knightmare_local_rails
    depends_on:
      - postgres
      - redis
    volumes:
      - ../..:/app
    env_file:
      - ./.envs/.rails
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: ../..
      dockerfile: ./deploy/local/compose/postgres/Dockerfile
    image: rails_knightmare_local_postgres
    container_name: rails_knightmare_local_postgres
    volumes:
      - rails_knightmare_local_postgres_data:/var/lib/postgresql/data
      - rails_knightmare_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.postgres

  redis:
    image: redis:7.2-alpine
    container_name: rails_knightmare_local_redis
    volumes:
      - rails_knightmare_local_redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  sidekiq:
    build:
      context: ../..
      dockerfile: ./deploy/local/compose/rails/Dockerfile
    image: rails_knightmare_local_sidekiq
    container_name: rails_knightmare_local_sidekiq
    depends_on:
      - postgres
      - redis
    volumes:
      - ../..:/app
    env_file:
      - ./.envs/.rails
    command: /sidekiq-start